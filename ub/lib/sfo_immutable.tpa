//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
/////
///// Library of DavidW's functions used for general mod-installation in the "immutable"
///// style.
/////
///// Shouldn't need to be edited by end user (though you're welcome to).
/////
///// Two subsections: a part that actually gets run when this is INCLUDEd, and a part
///// that defines the functions.
/////
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
/////
///// Function-definition part
/////
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////

// blank file

<<<<<<<< .../stratagems-inline/blank

>>>>>>>>

//////////////////////////////////////////////////////////////////////////////////////
///// Immutable wrap for HANDLE_CHARSETS
//////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION handle_charsets_immutably
       INT_VAR force_tra_rebuild=0
       STR_VAR tra_base=lang
               base_language=english
               rel_iconv_path=""
       RET     tra_loc
BEGIN
   // do conversions (ee only)
   ACTION_IF enhanced_edition BEGIN
       OUTER_SPRINT tra_loc "%external_loc%/lang/%MOD_FOLDER%"
       ACTION_IF (!FILE_EXISTS "%tra_loc%/languages_installed.mrk"  || force_tra_rebuild) BEGIN
          COPY ".../stratagems-inline/blank" "%tra_loc%/languages_installed.mrk"
          MKDIR "%tra_loc%/%base_language%"
          MKDIR "%tra_loc%/%LANGUAGE%"
          ACTION_BASH_FOR "%MOD_FOLDER%/%tra_base%/%LANGUAGE%" ".*\.tra" BEGIN
             COPY "%BASH_FOR_FILESPEC%" "%tra_loc%/%LANGUAGE%"
          END
          ACTION_MATCH "%LANGUAGE%" WITH
          "%base_language%" BEGIN END
          DEFAULT
            ACTION_BASH_FOR "%MOD_FOLDER%/%tra_base%/%base_language%" ".*\.tra" BEGIN
                COPY "%BASH_FOR_FILESPEC%" "%tra_loc%/%base_language%"
            END
          END
          OUTER_SPRINT iconv_path "%MOD_FOLDER%/%rel_iconv_path%"
          LAF HANDLE_CHARSETS INT_VAR infer_charsets = 1 STR_VAR iconv_path  tra_path = ~%tra_loc%~  END
	  
	  ACTION_IF "%LANGUAGE%" STRING_COMPARE_CASE "%base_language%" BEGIN
		LAF HANDLE_CHARSETS INT_VAR infer_charsets=1 STR_VAR language="%base_language%" tra_path="%MOD_FOLDER%/%tra_base%" out_path="%tra_loc%" END
	  END
       END
   END ELSE BEGIN
      // on non-EE, just set the tra loc
      OUTER_SPRINT tra_loc "%MOD_FOLDER%/%tra_base%"
   END
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
///// Make and check markers stored in marker_loc
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               Make a label
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION make_label
    STR_VAR label=""
BEGIN
   COPY ~.../stratagems-inline/blank~ ~%marker_loc%/%label%.mrk~
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               Check a label
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION check_label
    STR_VAR label=""
    RET value
BEGIN
   ACTION_IF FILE_EXISTS ~%marker_loc%/%label%.mrk~ BEGIN
      OUTER_SET value=1
   END ELSE BEGIN
      OUTER_SET value=0
   END
END

DEFINE_PATCH_FUNCTION check_label
   STR_VAR label=""
   RET value
BEGIN
   INNER_ACTION BEGIN
      LAF check_label STR_VAR label RET value END
   END
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///// Read an ini file "ini_to_read.ini" into SFO_reserved_ini_hash (mostly borrowed from Kjeron)
/////
///// ini key values are treated case-insensitive
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_MACRO SFO_read_ini_file
BEGIN
    LOCAL_SPRINT key ""
    ACTION_IF FILE_EXISTS "%ini_to_read%.ini" BEGIN
       COPY - "%ini_to_read%.ini" "%workspace%"
	    REPLACE_EVALUATE ~^\([^ %TAB%%WNL%]+\)=\([^%WNL%$]+\)~	
                     BEGIN
			// key must start line and cannot contain whitespace
			// value is everything after the "=" until the newline/end
			        SPRINT key "%MATCH1%"
			        TO_LOWER key
				TEXT_SPRINT $SFO_reserved_ini_hash(~%key%~) ~%MATCH2%~
		     END	
                     ~~
    END
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///// Check an ini value (case-insensitive)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION check_ini
        STR_VAR ini=""
        RET value
BEGIN
        TO_LOWER ini
        PATCH_IF !VARIABLE_IS_SET $SFO_reserved_ini_hash(~%ini%~) BEGIN
           SPRINT value 0
        END ELSE BEGIN
           SPRINT value $SFO_reserved_ini_hash(~%ini%~)
        END
END

DEFINE_ACTION_FUNCTION check_ini
        STR_VAR ini=""
        RET value
BEGIN
       OUTER_PATCH "" BEGIN
        LPF check_ini STR_VAR ini RET value END
       END
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///// Include and run a program, if appropriate with a tra file
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION run
        STR_VAR file=""
                file_loc=""
                tra=""
                version=""
BEGIN
       ACTION_IF "%file_loc%" STRING_EQUAL "" BEGIN
          OUTER_SPRINT filespec "%MOD_FOLDER%/%file%.tpa"
       END ELSE BEGIN
          OUTER_SPRINT filespec "%MOD_FOLDER%/%file_loc%/%file%.tpa"
       END
       ACTION_IF !FILE_EXISTS "%filespec%" BEGIN
          FAIL "You have tried to run '%file%', but '%filespec%' doesn't exist"
       END
       PRINT ~Including and running function %file%~
       INCLUDE ~%filespec%~
       WITH_TRA "%tra_loc%/%base_language%/%tra%.tra" "%tra_loc%/%LANGUAGE%/%tra%.tra" BEGIN
              LAF ~%file%~ STR_VAR version END
       END
END

// end of function-definition part

//////////////////////////////////////////////////////////////////////////////////////
/////
///// Live-code part
/////
//////////////////////////////////////////////////////////////////////////////////////

ACTION_IF !VARIABLE_IS_SET SFO_reserved_immutable_initialise BEGIN // only do this once, not once per component

   SILENT
   //////////////////////////////////////////////////////////////
   /// Determine if this is the Enhanced Edition.
   ///
   /// (We do this once only so as to localise any code changes
   /// if GAME_IS changes).
   //////////////////////////////////////////////////////////////

   OUTER_SET enhanced_edition=(GAME_IS "bgee bg2ee iwdee eet") ? 1 : 0

   //////////////////////////////////////////////////////////////
   /// set the default variables if they're not set already
   //////////////////////////////////////////////////////////////

   ACTION_IF !VARIABLE_IS_SET MOD_FOLDER BEGIN
      OUTER_SPRINT MOD_FOLDER "%TP2_NAME%"
   END

   ACTION_IF !VARIABLE_IS_SET external_loc BEGIN
      OUTER_SPRINT external_loc weidu_external
   END

   ACTION_IF !VARIABLE_IS_SET tra_base BEGIN
      OUTER_SPRINT tra_base lang
   END

   ACTION_IF !VARIABLE_IS_SET rel_iconv_path BEGIN
      OUTER_SPRINT rel_iconv_path "%tra_base%/iconv"
   END

   ACTION_IF !VARIABLE_IS_SET base_language BEGIN
      OUTER_SPRINT base_language english
   END

   //////////////////////////////////////////////////////////////
   /// make the external folders
   //////////////////////////////////////////////////////////////

   MKDIR "%external_loc%"
   MKDIR "%external_loc%/workspace"
   MKDIR "%external_loc%/data/%MOD_FOLDER%"
   MKDIR "%external_loc%/markers"
   MKDIR "%external_loc%/lang"

   //////////////////////////////////////////////////////////////
   /// Set variables for the external locations
   //////////////////////////////////////////////////////////////

   OUTER_SPRINT workspace "%external_loc%/workspace"
   OUTER_SPRINT external_data "%external_loc%/data/%MOD_FOLDER%"
   OUTER_SPRINT marker_loc "%external_loc%/markers"

   //////////////////////////////////////////////////////////////
   /// process the ini files
   //////////////////////////////////////////////////////////////

   ACTION_IF VARIABLE_IS_SET ini_file BEGIN
      OUTER_SPRINT ini_to_read "%MOD_FOLDER%/%ini_file%"
      LAM SFO_read_ini_file
   END

   ACTION_IF VARIABLE_IS_SET user_ini_file BEGIN
      OUTER_SPRINT ini_to_read "%MOD_FOLDER%/%user_ini_file%"
      LAM SFO_read_ini_file
   END

   //////////////////////////////////////////////////////////////
   /// read in the translations
   //////////////////////////////////////////////////////////////

   LAF check_ini STR_VAR ini=force_tra_rebuild RET value END
   OUTER_SET force_tra_rebuild=value
   LAF handle_charsets_immutably
      INT_VAR force_tra_rebuild
      STR_VAR tra_base rel_iconv_path base_language
      RET tra_loc
   END

   //////////////////////////////////////////////////////////////
   /// reload setup.tra
   //////////////////////////////////////////////////////////////

    LOAD_TRA "%tra_loc%/%base_language%/%tra_setup%.tra" "%tra_loc%/%LANGUAGE%/%tra_setup%.tra"
    VERBOSE
END
/// end of live-code part

